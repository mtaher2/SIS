<%- include('../../partials/header') %>

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <%- include('../../partials/sidebar') %>

        <!-- Main content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2"><%= module.title %></h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <div class="btn-group me-2">
                        <button type="button" class="btn btn-sm btn-outline-secondary" onclick="togglePublish()">
                            <%= module.published ? 'Unpublish' : 'Publish' %>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-secondary" onclick="editModule()">
                            Edit
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteModule()">
                            Delete
                        </button>
                    </div>
                </div>
            </div>

            <!-- Module description -->
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Description</h5>
                    <p class="card-text"><%= module.description || 'No description provided' %></p>
                </div>
            </div>

            <!-- Module content tabs -->
            <ul class="nav nav-tabs" id="moduleTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="pages-tab" data-bs-toggle="tab" data-bs-target="#pages" type="button" role="tab">
                        Pages
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="assignments-tab" data-bs-toggle="tab" data-bs-target="#assignments" type="button" role="tab">
                        Assignments
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="quizzes-tab" data-bs-toggle="tab" data-bs-target="#quizzes" type="button" role="tab">
                        Quizzes
                    </button>
                </li>
            </ul>

            <div class="tab-content mt-3" id="moduleTabContent">
                <!-- Pages tab -->
                <div class="tab-pane fade show active" id="pages" role="tabpanel">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h3>Pages</h3>
                        <a href="/instructor/modules/<%= module.module_id %>/pages/create" class="btn btn-primary">
                            Create Page
                        </a>
                    </div>
                    <div id="pagesList">
                        <!-- Pages will be loaded here via AJAX -->
                    </div>
                </div>

                <!-- Assignments tab -->
                <div class="tab-pane fade" id="assignments" role="tabpanel">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h3>Assignments</h3>
                        <a href="/instructor/modules/<%= module.module_id %>/assignments/create" class="btn btn-primary">
                            Create Assignment
                        </a>
                    </div>
                    <div id="assignmentsList">
                        <!-- Assignments will be loaded here via AJAX -->
                    </div>
                </div>

                <!-- Quizzes tab -->
                <div class="tab-pane fade" id="quizzes" role="tabpanel">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h3>Quizzes</h3>
                        <a href="/instructor/modules/<%= module.module_id %>/quizzes/create" class="btn btn-primary">
                            Create Quiz
                        </a>
                    </div>
                    <div id="quizzesList">
                        <!-- Quizzes will be loaded here via AJAX -->
                    </div>
                </div>
            </div>
        </main>
    </div>
</div>

<!-- Edit Module Modal -->
<div class="modal fade" id="editModuleModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Module</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editModuleForm">
                    <div class="mb-3">
                        <label for="title" class="form-label">Title</label>
                        <input type="text" class="form-control" id="title" name="title" value="<%= module.title %>" required>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" name="description" rows="3"><%= module.description %></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="updateModule()">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<script>
// Load content for each tab
document.addEventListener('DOMContentLoaded', function() {
    loadPages();
    loadAssignments();
    loadQuizzes();
});

// Toggle module publish status
async function togglePublish() {
    try {
        const response = await fetch(`/instructor/modules/<%= module.module_id %>/toggle-publish`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        
        if (response.ok) {
            location.reload();
        } else {
            alert('Error toggling module status');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Error toggling module status');
    }
}

// Edit module
function editModule() {
    const modal = new bootstrap.Modal(document.getElementById('editModuleModal'));
    modal.show();
}

// Update module
async function updateModule() {
    const form = document.getElementById('editModuleForm');
    const formData = new FormData(form);
    
    try {
        const response = await fetch(`/instructor/modules/<%= module.module_id %>`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                title: formData.get('title'),
                description: formData.get('description')
            })
        });
        
        if (response.ok) {
            location.reload();
        } else {
            alert('Error updating module');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Error updating module');
    }
}

// Delete module
async function deleteModule() {
    if (!confirm('Are you sure you want to delete this module? This action cannot be undone.')) {
        return;
    }
    
    try {
        const response = await fetch(`/instructor/modules/<%= module.module_id %>`, {
            method: 'DELETE'
        });
        
        if (response.ok) {
            window.location.href = '/instructor/courses/<%= module.course_id %>/modules';
        } else {
            alert('Error deleting module');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Error deleting module');
    }
}

// Load pages
async function loadPages() {
    try {
        const response = await fetch(`/instructor/modules/<%= module.module_id %>/pages`);
        const html = await response.text();
        document.getElementById('pagesList').innerHTML = html;
    } catch (error) {
        console.error('Error loading pages:', error);
    }
}

// Load assignments
async function loadAssignments() {
    try {
        const response = await fetch(`/instructor/modules/<%= module.module_id %>/assignments`);
        const html = await response.text();
        document.getElementById('assignmentsList').innerHTML = html;
    } catch (error) {
        console.error('Error loading assignments:', error);
    }
}

// Load quizzes
async function loadQuizzes() {
    try {
        const response = await fetch(`/instructor/modules/<%= module.module_id %>/quizzes`);
        const html = await response.text();
        document.getElementById('quizzesList').innerHTML = html;
    } catch (error) {
        console.error('Error loading quizzes:', error);
    }
}
</script>

<%- include('../../partials/footer') %> 